
# Provides the '%test_no_runtime_execution' LLVM-lit command.
# This uses LLC and patmos-ld to compile the LLVM-IR test program without any 
# standard library or runtime code of any kind, producing a standalone ELF that 
# is then run on pasim.
# 
# The program must have a 'main' function defined where execution starts
# and that returns 'i32'.
# For correct execution, the program must return 0. Any other return value
# is treated as an error and the test will fail.
# The program has 400 cycles to execute before it is stopped and assumed a failure.
# Note that it takes around 100 cycles to reach the 'main' function,
# giving it less than 300 cycles to run. Therefore, the aim should be that the
# 'main' function finishes within 200 cycles.
llc = next((x[1] for x in config.substitutions if 'llc' in x[0]), "llc not found")

# The follwing string is an LLVM-IR function that is used at
# the start of program execution. Its only function is to get the
# CPU ready for executing the rest of the program.
# This function is linked into every %test_no_runtime_execution test
# and jumps to its 'main' function when ready.
#
# The exact formatting of this program is to enable it to be printed
# by the test script, into a file, that is then compiled and linked
# into the program.
_start = ""
_start += "define i32 @_start() {"  
_start += "entry:"
_start += "  call void asm sideeffect \"" 
_start += "		li $$r31 = 2064384;" 	# initialize shadow stack pointer (0x1f8000)
_start += "		mts $$ss  = $0;" 		# initialize the stack cache's spill pointer (0x200000)
_start += "		mts $$st  = $0;"		# initialize the stack cache's top pointer (0x200000)
_start += "		brcfnd $1;"      		# execute the main function immediately
_start += "	\", \"r,r,~{r31},~{ss},~{st}\""
_start += "	(i32 2097152, i32 ()* @main)"
			# We will never return from this functions, as we have
			# branched to the main function, which will handle the return.
			# We do this to avoid having the compiler mess with registers
			# as it tries to call main
_start += "  unreachable"
_start += "}"
_start += "declare i32 @main() \n"

# setup substitution for %test_no_runtime_execution.
config.substitutions.append(('%test_no_runtime_execution',
	# Compile program
	llc + " %s -filetype=obj -o %t && \\\n" +
	# Emit startup function LLVM-IR
	"echo '" + _start + "' > %t_start.ll && \\\n" + 
	# Compile startup function
	llc + " %t_start.ll -filetype=obj -o %t_start.o && \\\n" +
	# Link program and startup function and emit ELF
	"patmos-ld  -nostdlib -static -o %t %t %t_start.o && \\\n" +
	# Run program
	"pasim %t -c 400"
))